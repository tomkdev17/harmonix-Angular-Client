{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/forms\";\nexport class UserUpdateFormComponent {\n  constructor(fetchApiData, snackbar) {\n    this.fetchApiData = fetchApiData;\n    this.snackbar = snackbar;\n    this.userUpdated = new EventEmitter();\n    this.newUserData = {\n      Username: '',\n      Password: '',\n      Email: '',\n      Birthday: ''\n    };\n  }\n  ngOnChanges() {\n    if (this.user) {\n      this.newUserData = {\n        Username: this.user.Username,\n        Email: this.user.Email,\n        Password: '',\n        Birthday: this.user.Birthday\n      };\n    }\n  }\n  updateUser() {\n    this.fetchApiData.editUser(this.newUserData).subscribe(() => {\n      this.userUpdated.emit();\n      this.snackbar.open('Update Successful!', 'OK', {\n        duration: 2000\n      });\n    }, result => {\n      this.snackbar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n  static {\n    this.ɵfac = function UserUpdateFormComponent_Factory(t) {\n      return new (t || UserUpdateFormComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserUpdateFormComponent,\n      selectors: [[\"app-user-update-form\"]],\n      inputs: {\n        user: \"user\"\n      },\n      outputs: {\n        userUpdated: \"userUpdated\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 19,\n      vars: 4,\n      consts: [[1, \"update-user-card\"], [1, \"form\"], [\"matInput\", \"\", \"type\", \"text\", \"name\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"email\", \"name\", \"Email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"type\", \"date\", \"name\", \"Birthday\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n      template: function UserUpdateFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-header\")(3, \"h2\");\n          i0.ɵɵtext(4, \"Update your info\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"form\")(7, \"div\", 1)(8, \"mat-form-field\")(9, \"input\", 2);\n          i0.ɵɵlistener(\"ngModelChange\", function UserUpdateFormComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.newUserData.Username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"mat-form-field\")(11, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function UserUpdateFormComponent_Template_input_ngModelChange_11_listener($event) {\n            return ctx.newUserData.Password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"mat-form-field\")(13, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function UserUpdateFormComponent_Template_input_ngModelChange_13_listener($event) {\n            return ctx.newUserData.Email = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"mat-form-field\")(15, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function UserUpdateFormComponent_Template_input_ngModelChange_15_listener($event) {\n            return ctx.newUserData.Birthday = $event;\n          });\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(16, \"mat-card-actions\")(17, \"button\", 6);\n          i0.ɵɵlistener(\"click\", function UserUpdateFormComponent_Template_button_click_17_listener() {\n            return ctx.updateUser();\n          });\n          i0.ɵɵtext(18, \" Submit \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngModel\", ctx.newUserData.Username);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.newUserData.Password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.newUserData.Email);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.newUserData.Birthday);\n        }\n      },\n      dependencies: [i3.MatInput, i4.MatFormField, i5.MatButton, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i6.MatCardHeader, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm],\n      styles: [\"mat-card[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\nmat-card-header[_ngcontent-%COMP%] {\\n  flex-direction: column;\\n}\\n\\nmat-card-content[_ngcontent-%COMP%] {\\n  padding: 10px;\\n}\\n\\nmat-card-actions[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  margin-bottom: 10px;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  grid-gap: 10px;\\n  margin: 20px;\\n}\\n\\n@media (max-width: 650px) {\\n  .form[_ngcontent-%COMP%] {\\n    grid-template-columns: repeat(1, 1fr);\\n    padding: 0px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci11cGRhdGUtZm9ybS91c2VyLXVwZGF0ZS1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7QUFDSjs7QUFDQTtFQUNJLHNCQUFBO0FBRUo7O0FBQUE7RUFDSSxhQUFBO0FBR0o7O0FBREE7RUFDSSx1QkFBQTtFQUNBLG1CQUFBO0FBSUo7O0FBRkE7RUFDSSx1QkFBQTtFQUNBLGFBQUE7RUFDQSxxQ0FBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FBS0o7O0FBRkE7RUFDSTtJQUNJLHFDQUFBO0lBQ0EsWUFBQTtFQUtOO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxubWF0LWNhcmQtaGVhZGVyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbn1cbm1hdC1jYXJkLWNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG59XG5tYXQtY2FyZC1hY3Rpb25zIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDsgXG59XG4uZm9ybSB7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xuICAgIGdyaWQtZ2FwOiAxMHB4O1xuICAgIG1hcmdpbjogMjBweDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7IFxuICAgIC5mb3JtIHsgXG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEsIDFmcik7XG4gICAgICAgIHBhZGRpbmc6IDBweDsgXG4gICAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["EventEmitter","UserUpdateFormComponent","constructor","fetchApiData","snackbar","userUpdated","newUserData","Username","Password","Email","Birthday","ngOnChanges","user","updateUser","editUser","subscribe","emit","open","duration","result","i0","ɵɵdirectiveInject","i1","FetchApiDataService","i2","MatSnackBar","selectors","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","UserUpdateFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserUpdateFormComponent_Template_input_ngModelChange_9_listener","$event","UserUpdateFormComponent_Template_input_ngModelChange_11_listener","UserUpdateFormComponent_Template_input_ngModelChange_13_listener","UserUpdateFormComponent_Template_input_ngModelChange_15_listener","UserUpdateFormComponent_Template_button_click_17_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/Tommy_1/Documents/Development/CareerFoundry/harmonix-Angular-Client/src/app/user-update-form/user-update-form.component.ts","/Users/Tommy_1/Documents/Development/CareerFoundry/harmonix-Angular-Client/src/app/user-update-form/user-update-form.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-update-form',\n  templateUrl: './user-update-form.component.html',\n  styleUrls: ['./user-update-form.component.scss']\n})\nexport class UserUpdateFormComponent {\n  @Input() user: any;\n  @Output() userUpdated = new EventEmitter<void>();\n\n  newUserData = {Username: '', Password: '', Email: '', Birthday: ''}; \n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public snackbar: MatSnackBar,\n  ) {}\n\n  ngOnChanges(): void {\n    if(this.user){\n      this.newUserData = {\n        Username: this.user.Username,\n        Email: this.user.Email,\n        Password: '',\n        Birthday: this.user.Birthday\n      }\n    }\n  }\n  updateUser(): void {\n    this.fetchApiData.editUser(this.newUserData).subscribe( () => {\n      this.userUpdated.emit();\n      this.snackbar.open('Update Successful!', 'OK', {\n        duration: 2000\n      });\n    }, (result) => {\n      this.snackbar.open(result, 'OK', {\n        duration: 2000\n      });\n    })\n  }\n}\n","<div class=\"update-user-card\">\n        <mat-card>\n            <mat-card-header>\n                <h2>Update your info</h2>\n            </mat-card-header>\n            <mat-card-content>\n                <form>\n                    <div class=\"form\">\n                        \n                        <mat-form-field>\n                            <input\n                                matInput\n                                [(ngModel)]=\"newUserData.Username\"\n                                type=\"text\"\n                                name=\"Username\"\n                                required\n                            >\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input\n                                matInput\n                                [(ngModel)]=\"newUserData.Password\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                name=\"Password\"\n                                required\n                            >\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input\n                                matInput\n                                [(ngModel)]=\"newUserData.Email\"\n                                type=\"email\"\n                                name=\"Email\"\n                                required\n                            >\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input\n                                matInput\n                                [(ngModel)]=\"newUserData.Birthday\"\n                                type=\"date\"\n                                name=\"Birthday\"\n                                required\n                            >\n                        </mat-form-field>\n                    </div>\n                </form>\n            </mat-card-content>\n            <mat-card-actions>\n                <button\n                    mat-raised-button\n                    (click)=\"updateUser()\"\n                    color=\"primary\"\n                >\n                    Submit\n                </button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}