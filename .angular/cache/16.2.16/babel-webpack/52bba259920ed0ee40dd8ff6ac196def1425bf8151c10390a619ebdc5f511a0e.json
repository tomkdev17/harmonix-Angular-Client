{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/forms\";\nexport class UserLoginFormComponent {\n  constructor(fetchApiData, dialogRef, snackBar, router) {\n    this.fetchApiData = fetchApiData;\n    this.dialogRef = dialogRef;\n    this.snackBar = snackBar;\n    this.router = router;\n    this.userData = {\n      Username: '',\n      Password: ''\n    };\n  }\n  ngOnInit() {}\n  loginUser() {\n    this.fetchApiData.userLogin(this.userData).subscribe(result => {\n      this.dialogRef.close();\n      this.snackBar.open('User Login Successful!', 'OK', {\n        duration: 2000\n      });\n      this.router.navigate(['mainview']);\n    }, result => {\n      this.snackBar.open('User Login Failed :(', 'OK', {\n        duration: 2000\n      });\n    });\n  }\n  static {\n    this.ɵfac = function UserLoginFormComponent_Factory(t) {\n      return new (t || UserLoginFormComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserLoginFormComponent,\n      selectors: [[\"app-user-login-form\"]],\n      inputs: {\n        userData: \"userData\"\n      },\n      decls: 13,\n      vars: 2,\n      consts: [[\"matInput\", \"\", \"placeholder\", \"Username\", \"type\", \"text\", \"name\", \"Username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", \"placeholder\", \"Password\", \"type\", \"password\", \"name\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"]],\n      template: function UserLoginFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-header\")(2, \"mat-card-title\");\n          i0.ɵɵtext(3, \"Login:\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"mat-card-content\")(5, \"form\")(6, \"mat-form-field\")(7, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function UserLoginFormComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.userData.Username = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-form-field\")(9, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function UserLoginFormComponent_Template_input_ngModelChange_9_listener($event) {\n            return ctx.userData.Password = $event;\n          });\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(10, \"mat-card-actions\")(11, \"button\", 2);\n          i0.ɵɵlistener(\"click\", function UserLoginFormComponent_Template_button_click_11_listener() {\n            return ctx.loginUser();\n          });\n          i0.ɵɵtext(12, \" Login \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.userData.Username);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.userData.Password);\n        }\n      },\n      dependencies: [i5.MatInput, i6.MatFormField, i7.MatButton, i8.MatCard, i8.MatCardActions, i8.MatCardContent, i8.MatCardHeader, i8.MatCardTitle, i9.ɵNgNoValidate, i9.DefaultValueAccessor, i9.NgControlStatus, i9.NgControlStatusGroup, i9.RequiredValidator, i9.NgModel, i9.NgForm],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["UserLoginFormComponent","constructor","fetchApiData","dialogRef","snackBar","router","userData","Username","Password","ngOnInit","loginUser","userLogin","subscribe","result","close","open","duration","navigate","i0","ɵɵdirectiveInject","i1","FetchApiDataService","i2","MatDialogRef","i3","MatSnackBar","i4","Router","selectors","inputs","decls","vars","consts","template","UserLoginFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UserLoginFormComponent_Template_input_ngModelChange_7_listener","$event","UserLoginFormComponent_Template_input_ngModelChange_9_listener","UserLoginFormComponent_Template_button_click_11_listener","ɵɵadvance","ɵɵproperty"],"sources":["/Users/Tommy_1/Documents/Development/CareerFoundry/harmonix-Angular-Client/src/app/user-login-form/user-login-form.component.ts","/Users/Tommy_1/Documents/Development/CareerFoundry/harmonix-Angular-Client/src/app/user-login-form/user-login-form.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\n\nexport class UserLoginFormComponent implements OnInit {\n  \n  @Input() userData = {Username: '', Password: ''};\n\n  constructor(\n    public fetchApiData: FetchApiDataService, \n    public dialogRef: MatDialogRef<UserLoginFormComponent>, \n    public snackBar: MatSnackBar, \n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.userData).subscribe((result) => {\n      this.dialogRef.close();\n      this.snackBar.open('User Login Successful!', 'OK', {\n        duration: 2000\n      });\n      this.router.navigate(['mainview']); \n    }, (result) => {\n      this.snackBar.open('User Login Failed :(', 'OK', {\n        duration: 2000\n      });\n    });\n  }\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Login:</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <form>\n            <mat-form-field>\n                <input \n                    matInput\n                    [(ngModel)]=\"userData.Username\"\n                    placeholder=\"Username\"\n                    type=\"text\"\n                    name=\"Username\"\n                    required\n                >\n            </mat-form-field>\n            <mat-form-field>\n                <input\n                    matInput\n                    [(ngModel)]=\"userData.Password\"\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    name=\"Password\"\n                    required\n                >\n            </mat-form-field>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <button\n            mat-raised-button\n            (click)=\"loginUser()\"\n            color=\"primary\"\n        >\n        Login\n        </button>\n    </mat-card-actions>\n</mat-card>\n"],"mappings":";;;;;;;;;;AAYA,OAAM,MAAOA,sBAAsB;EAIjCC,YACSC,YAAiC,EACjCC,SAA+C,EAC/CC,QAAqB,EACpBC,MAAc;IAHf,KAAAH,YAAY,GAAZA,YAAY;IACZ,KAAAC,SAAS,GAATA,SAAS;IACT,KAAAC,QAAQ,GAARA,QAAQ;IACP,KAAAC,MAAM,GAANA,MAAM;IANP,KAAAC,QAAQ,GAAG;MAACC,QAAQ,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAC;EAO7C;EAEHC,QAAQA,CAAA,GAAU;EAElBC,SAASA,CAAA;IACP,IAAI,CAACR,YAAY,CAACS,SAAS,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACM,SAAS,CAAEC,MAAM,IAAI;MAC9D,IAAI,CAACV,SAAS,CAACW,KAAK,EAAE;MACtB,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,wBAAwB,EAAE,IAAI,EAAE;QACjDC,QAAQ,EAAE;OACX,CAAC;MACF,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC,EAAGJ,MAAM,IAAI;MACZ,IAAI,CAACT,QAAQ,CAACW,IAAI,CAAC,sBAAsB,EAAE,IAAI,EAAE;QAC/CC,QAAQ,EAAE;OACX,CAAC;IACJ,CAAC,CAAC;EACJ;;;uBAzBWhB,sBAAsB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,mBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,WAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAtB3B,sBAAsB;MAAA4B,SAAA;MAAAC,MAAA;QAAAvB,QAAA;MAAA;MAAAwB,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCZnCjB,EAAA,CAAAmB,cAAA,eAAU;UAEcnB,EAAA,CAAAoB,MAAA,aAAM;UAAApB,EAAA,CAAAqB,YAAA,EAAiB;UAE3CrB,EAAA,CAAAmB,cAAA,uBAAkB;UAKFnB,EAAA,CAAAsB,UAAA,2BAAAC,+DAAAC,MAAA;YAAA,OAAAN,GAAA,CAAA9B,QAAA,CAAAC,QAAA,GAAAmC,MAAA;UAAA,EAA+B;UAFnCxB,EAAA,CAAAqB,YAAA,EAOC;UAELrB,EAAA,CAAAmB,cAAA,qBAAgB;UAGRnB,EAAA,CAAAsB,UAAA,2BAAAG,+DAAAD,MAAA;YAAA,OAAAN,GAAA,CAAA9B,QAAA,CAAAE,QAAA,GAAAkC,MAAA;UAAA,EAA+B;UAFnCxB,EAAA,CAAAqB,YAAA,EAOC;UAIbrB,EAAA,CAAAmB,cAAA,wBAAkB;UAGVnB,EAAA,CAAAsB,UAAA,mBAAAI,yDAAA;YAAA,OAASR,GAAA,CAAA1B,SAAA,EAAW;UAAA,EAAC;UAGzBQ,EAAA,CAAAoB,MAAA,eACA;UAAApB,EAAA,CAAAqB,YAAA,EAAS;;;UA1BGrB,EAAA,CAAA2B,SAAA,GAA+B;UAA/B3B,EAAA,CAAA4B,UAAA,YAAAV,GAAA,CAAA9B,QAAA,CAAAC,QAAA,CAA+B;UAU/BW,EAAA,CAAA2B,SAAA,GAA+B;UAA/B3B,EAAA,CAAA4B,UAAA,YAAAV,GAAA,CAAA9B,QAAA,CAAAE,QAAA,CAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}